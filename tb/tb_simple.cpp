// tb/tb_simple.cpp
#include "verilated.h"
#include "verilated_vcd_c.h"
#include "Vtb_simple.h"      // autoâ€‘generated by Verilator

static vluint64_t main_time = 0;
double sc_time_stamp() { return main_time; }

int main(int argc, char **argv) {
  Verilated::commandArgs(argc, argv);
  Vtb_simple* top = new Vtb_simple;

  Verilated::traceEverOn(true);
  VerilatedVcdC* tfp = new VerilatedVcdC;
  top->trace(tfp, 99);
  tfp->open("tb_simple.vcd");

  // let the SV testbench inside tb_simple drive reset/clk
  // by simply pumping eval() and dump() until it calls $finish()
  while (!Verilated::gotFinish()) {
    top->eval();
    tfp->dump(main_time++);
  }

  tfp->close();
  delete top;
  delete tfp;
  return 0;
}
